{
    "assessment":  "\u003cbr/\u003eAssignment 1 \u0026 20% \u0026 Add features to a Recursive Descent PL0 compiler. \u003cbr/\u003eAssignment 2 \u0026 20% \u0026 Add features to a Parser Generator-based PL0 compiler. \u003cbr/\u003eAssignment 3 \u0026 20% \u0026 Add features to a Parser Generator-based PL0 compiler. \u003cbr/\u003eFinal Exam \u0026 40% \u0026 Closed book (one A4 sheet allowed). Examines all theoretical course content. \u003cbr/\u003e",
    "review":  "\u003cbr/\u003eThe course covers basic compiler design. It splits the course up into theoretical (taught in the lectures and examined on the final) and practical content (through the assignments).\u003cbr/\u003e\u003cbr/\u003eIn the theoretical component, it covers context-free grammars, recursive descent and bottom up LR(1) / LALR(1) parsing, static checking, code generation, garbage collection and object-orientation. The practical component consists of three assignments, where students are given the Java source code for a compiler for the PL0 programming language and are to add additional features to the language.\u003cbr/\u003e\u003cbr/\u003eThe textbook is not required, but attending the lectures is highly recommended as the content, while not too difficult to grasp, does require explanation, plus Professor Hayes is a fantastic lecturer. Professor Hayes also provides comprehensive PDF notes of all topics based on the lectures that make excellent study tools.\u003cbr/\u003e\u003cbr/\u003eThe final exam is closed book, but one double-sided A4 sheet of paper is allowed. Preparing for the exam is easy due to the aforementioned lecture notes, tutorial questions and numerous past exams available. The structure of the course has remained static for a number of years, so previous exams provide a good guide as to what to expect on the final.\u003cbr/\u003e\u003cbr/\u003eIf you are interested in how programming languages work, I highly recommend this course. It\u0027s one of the best organised and taught courses in the school that I have personally taken, the content is interesting, and the assessment structure makes high grades achievable with moderate effort.\u003cbr/\u003e",
    "coordinator":  "Prof Ian Hayes (ianh@itee.uq.edu.au)",
    "contact":  "3L, 1T",
    "score":  "5",
    "code":  "COMP4403",
    "title":  "Compilers and Interpreters",
    "preparation":  "\u003cbr/\u003eitem Complete CSSE2010 and COMP3506, and in particular understand assembly code, state machines and tree data structures\u003cbr/\u003eitem Do background reading on formal language theory (e.g. formal grammars, the Chomsky Heirarchy)\u003cbr/\u003e",
    "prereq":  "COMP2502 or COMP3506"
}
